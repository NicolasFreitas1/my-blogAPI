generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement()) @map("id_user") /// Id da tabela  
  name      String   @map("nm_user") @db.VarChar(50) /// Nome do usuário
  login     String   @unique @map("nm_login") @db.VarChar(30) /// Login do usuário
  password  String   @map("vl_password") /// Senha do usuário
  createdAt DateTime @default(now()) @map("dt_created") /// Data de criação do usuário 
  updatedAt DateTime @updatedAt @map("dt_updated") /// Data de atualização do usuário 

  posts    Post[]
  comments Comment[]

  @@map("user")
}

model Post {
  id        Int      @id @default(autoincrement()) @map("id_post") /// Id da Tabela
  userId    Int      @map("id_user") /// Foreign key Id do usuario
  title     String   @unique @db.VarChar(50) /// Titulo de cada postagem
  content   String   @db.VarChar(200) /// Conteudo de cada postagem  
  createdAt DateTime @default(now()) @map("dt_created") /// Data de criação da postagem
  updatedAt DateTime @updatedAt @map("dt_updated") /// Data de edição da postagem 

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments Comment[]

  @@map("post")
}

model Comment {
  id        Int      @id @default(autoincrement()) @map("id_comment") /// Id do comentario
  userId    Int      @map("id_user") /// Foreign key Id do usuario 
  postId    Int      @map("id_post") /// Foreign key Id da postagem 
  content   String   @map("content_comment") @db.VarChar(100) /// Conteudo de cada postagem  
  createdAt DateTime @default(now()) @map("dt_created") /// Data de criação da postagem
  updatedAt DateTime @updatedAt @map("dt_updated") /// Data de edição da postagem 

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@map("comment")
}
